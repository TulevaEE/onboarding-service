version: 2.1
orbs:
  aws-ecr: circleci/aws-ecr@9.0.2
  aws-cli: circleci/aws-cli@4.1.3
  eb: circleci/aws-elastic-beanstalk@2.0.1
  codecov: codecov/codecov@3.2.4
  snyk: snyk/snyk@1.4.0
jobs:
  build:
    environment:
      TERM: dumb
    docker:
      - image: cimg/openjdk:17.0
    steps:
      - attach_workspace:
          at: .
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-{{ arch }}-{{ checksum "build.gradle.kts" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-
      - run:
          name: Build
          command: ./gradlew build --no-daemon --stacktrace

      - snyk/scan:
          fail-on-issues: false
          organization: tuleva

      - store_test_results:
          path: ./build/test-results

      - store_artifacts:
          path: ./build/reports/
          destination: /reports

      - codecov/upload

      - save_cache:
          key: v1-dependencies-{{ arch }}-{{ checksum "build.gradle.kts" }}
          paths:
            - ~/.gradle

      # Cache the build folder for the deploy job
      - save_cache:
          key: v1-build-{{ .Environment.CIRCLE_BRANCH }}-{{ .Environment.CIRCLE_SHA1 }}
          paths:
            - build/distributions

      - persist_to_workspace:
          root: .
          paths:
            - build
      - run:
          name: Check workspace
          command: ls -laR

  deploy-staging:
    docker:
      - image: cimg/base:stable
    steps:
      - checkout
      - eb/setup
      - restore_cache:
          keys:
            - v1-build-{{ .Environment.CIRCLE_BRANCH }}-{{ .Environment.CIRCLE_SHA1 }}
      - deploy:
          name: Deploy master to Staging
          command: eb deploy onboarding-service-staging --label ${CIRCLE_SHA1} --timeout 20

  deploy-production:
    docker:
      - image: cimg/base:stable
    steps:
      - checkout
      - eb/setup
      - restore_cache:
          keys:
            - v1-build-{{ .Environment.CIRCLE_BRANCH }}-{{ .Environment.CIRCLE_SHA1 }}
      - deploy:
          name: Deploy master to Production
          command: eb deploy onboarding-service-env --label ${CIRCLE_SHA1} --timeout 20

  notify-sentry-deploy:
    docker:
      - image: cimg/base:stable
    environment:
      SENTRY_PROJECT: onboarding-service
    steps:
      - checkout
      - run:
          name: Create release and notify Sentry of deploy
          command: |
            curl -sL https://sentry.io/get-cli/ | bash
            export SENTRY_RELEASE=$(sentry-cli releases propose-version)
            sentry-cli releases new -p $SENTRY_PROJECT $SENTRY_RELEASE
            sentry-cli releases set-commits $SENTRY_RELEASE --auto
            sentry-cli releases finalize $SENTRY_RELEASE
            sentry-cli releases deploys $SENTRY_RELEASE new -e $SENTRY_ENVIRONMENT

workflows:
  version: 2
  onboarding-service-workflow:
    jobs:
      - build:
          context: snyk
      - aws-ecr/build_and_push_image:
          requires:
            - build
          context: aws
          auth:
            - aws-cli/setup
          path: build/docker
          repo: onboarding-service
          tag: 'latest,${CIRCLE_SHA1}'
          attach_workspace: true
          workspace_root: .
          filters:
            branches:
              only: master
      - deploy-staging:
          requires:
            - aws-ecr/build_and_push_image
          context: aws
          filters:
            branches:
              only: master
      - deploy-production:
          requires:
            - aws-ecr/build_and_push_image
          context: aws
          filters:
            branches:
              only: master
      - notify-sentry-deploy:
          requires:
            - deploy-production
          context: sentry
          filters:
            branches:
              only: master
