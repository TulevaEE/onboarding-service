# Dont forget to set the env variable "certdomain", and either fill in your email below or use an env variable for that too.
# Also note that this config is using the LetsEncrypt staging server, remove the flag when ready!

Resources:
  sslSecurityGroupIngress:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      GroupId: {"Fn::GetAtt" : ["AWSEBSecurityGroup", "GroupId"]}
      IpProtocol: tcp
      ToPort: 443
      FromPort: 443
      CidrIp: 0.0.0.0/0

files:

  /etc/nginx/nginx.conf:
    mode: "000644"
    owner: root
    group: root
    content: |
      # Elastic Beanstalk Nginx Configuration File

      user                    nginx;
      error_log               /var/log/nginx/error.log warn;
      pid                     /var/run/nginx.pid;
      worker_processes        auto;
      worker_rlimit_nofile    32796;

      events {
          worker_connections  1024;
      }

      http {
          include       /etc/nginx/mime.types;
          default_type  application/octet-stream;

          log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                            '$status $body_bytes_sent "$http_referer" '
                            '"$http_user_agent" "$http_x_forwarded_for"';

          include       conf.d/*.conf;

          map $http_upgrade $connection_upgrade {
              default     "upgrade";
          }

          server {
              listen        80 default_server;
              access_log    /var/log/nginx/access.log main;

              client_header_timeout 60;
              client_body_timeout   60;
              keepalive_timeout     60;
              gzip                  off;
              gzip_comp_level       4;
              gzip_types text/plain text/css application/json application/javascript application/x-javascript text/xml application/xml application/xml+rss text/javascript;

              # Include the Elastic Beanstalk generated locations
              include conf.d/elasticbeanstalk/*.conf;
          }

          server {
              listen       443 default ssl;
              server_name  localhost;
              error_page  497 https://$host$request_uri;

              ssl_certificate      /etc/letsencrypt/live/ebcert/fullchain.pem;
              ssl_certificate_key  /etc/letsencrypt/live/ebcert/privkey.pem;
              ssl_session_timeout  5m;
              ssl_protocols  TLSv1.1 TLSv1.2;
              ssl_ciphers "EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH";
              ssl_prefer_server_ciphers   on;
              if ($ssl_protocol = "") {
                rewrite ^ https://$host$request_uri? permanent;
              }
              location / {
                  proxy_pass  http://127.0.0.1:5000;
                  proxy_http_version 1.1;

                  proxy_set_header    Connection          $connection_upgrade;
                  proxy_set_header    Upgrade             $http_upgrade;
                  proxy_set_header    Host                $host;
                  proxy_set_header    X-Real-IP           $remote_addr;
                  proxy_set_header    X-Forwarded-For     $proxy_add_x_forwarded_for;
                  proxy_pass_request_headers    on;
              }
          }
      }
packages:
  yum:
    epel-release: []

container_commands:
  10_installcertbot:
    command: "wget https://dl.eff.org/certbot-auto;chmod a+x certbot-auto"
  20_getcert:
    command: "sudo ./certbot-auto certonly --debug --non-interactive --email ${certemail} --agree-tos --standalone --domains ${certdomain} --keep-until-expiring --pre-hook \"service nginx stop\""
  30_link:
    command: "ln -sf /etc/letsencrypt/live/${certdomain} /etc/letsencrypt/live/ebcert"
