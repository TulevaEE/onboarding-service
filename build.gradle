buildscript {
	ext {
		springBootVersion = '2.1.4.RELEASE'
		springBootAdminVersion = '2.1.3'
	}
	repositories {
		mavenCentral()
		maven {
			url "https://plugins.gradle.org/m2/"
		}
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath("gradle.plugin.com.gorylenko.gradle-git-properties:gradle-git-properties:2.0.0")
	}
}

apply plugin: 'java'
apply plugin: 'groovy'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'jacoco'
apply plugin: 'com.gorylenko.gradle-git-properties'

jar {
	baseName = 'onboarding-service'
	version = '0.0.1-SNAPSHOT'
}
sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
	mavenCentral()
	maven {
		url "https://raw.githubusercontent.com/TulevaEE/releases-repo/master/"
	}
	maven {
		url "https://jitpack.io"
	}
}

processResources {
	from ('.ebextensions/') {
		into '.ebextensions'
	}
}

dependencies {
	compileOnly('org.projectlombok:lombok:1.18.6')
	annotationProcessor('org.projectlombok:lombok:1.18.6')
	compile('org.springframework.boot:spring-boot-starter-actuator')
	compile('org.springframework.boot:spring-boot-starter-security')
	compile('org.springframework.boot:spring-boot-starter-web')
	compile('org.springframework.boot:spring-boot-starter-thymeleaf')
	compile('org.springframework.boot:spring-boot-starter-cache')
	runtime("org.springframework.boot:spring-boot-devtools")
	compile('org.springframework.boot:spring-boot-starter-aop')
	compile('org.springframework.boot:spring-boot-starter-json')
	compile("de.codecentric:spring-boot-admin-starter-client")
	runtime('org.postgresql:postgresql')
	compile('org.flywaydb:flyway-core')
	compile("org.springframework.boot:spring-boot-starter-data-jpa")
	compile("org.glassfish.jersey.inject:jersey-hk2:2.28")
	compile("org.springframework.security.oauth:spring-security-oauth2:2.0.17.RELEASE")
	compile("org.jsoup:jsoup:1.8.1")
	compile('org.apache.commons:commons-lang3:3.8.1')
	compile('net.sf.ehcache:ehcache')
	compile('org.decampo:xirr:0.0')

	compile('com.github.ErkoRisthein:mobileid:1.9') {
		exclude group: 'commons-logging', module: 'commons-logging'
	}
	compile('ee.sk.smartid:smart-id-java-client:1.0')

	compile('com.getsentry.raven:raven-logback:7.8.3')
	compile('io.springfox:springfox-swagger2:2.6.1')
	compile('io.springfox:springfox-swagger-ui:2.6.1')

	compile('org.hibernate:hibernate-java8')
	compile('com.rollbar:rollbar:0.5.3')
	compile('com.mandrillapp.wrapper.lutung:lutung:0.0.7')

	compile('com.ecwid:maleorang:3.0-0.9.6')

	compile('com.sun.xml.ws:jaxws-rt:2.2.10')

	testCompile("com.h2database:h2")
	testCompile("org.springframework.boot:spring-boot-starter-test") {
		exclude module: "spock-core"
	}
	testCompile("org.spockframework:spock-core:1.3-groovy-2.4")
	testCompile("org.spockframework:spock-spring:1.3-groovy-2.4")
	testCompile("com.github.tomakehurst:wiremock:2.4.1")
	testCompile("org.springframework.security:spring-security-test")
}

dependencyManagement {
	imports {
		mavenBom("de.codecentric:spring-boot-admin-dependencies:$springBootAdminVersion")
	}
}

test {
	testLogging {
		events "passed", "skipped", "failed", "standardOut", "standardError"
		showCauses true
		showExceptions true
		showStackTraces true
		exceptionFormat = 'full'
	}
}

bootRun {
	systemProperties['spring.profiles.active'] = 'dev'
}

jacocoTestReport {
	dependsOn test
	reports {
		xml.enabled true
		html.enabled false
	}
}

check.dependsOn jacocoTestReport
