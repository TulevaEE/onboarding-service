# Dont forget to set the env variable "certdomain", and either fill in your email below or use an env variable for that too.
# Also note that this config is using the LetsEncrypt staging server, remove the flag when ready!

Resources:
  sslSecurityGroupIngress:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      GroupId: {"Fn::GetAtt" : ["AWSEBSecurityGroup", "GroupId"]}
      IpProtocol: tcp
      ToPort: 443
      FromPort: 443
      CidrIp: 0.0.0.0/0

files:
  /tmp/ssl_proxy.conf:
    mode: "000644"
    owner: root
    group: root
    content: |
          server {
              listen       443 default ssl;
              server_name  localhost;
              error_page  497 https://$host$request_uri;

              underscores_in_headers on;
              ssl_certificate      /etc/letsencrypt/live/ebcert/fullchain.pem;
              ssl_certificate_key  /etc/letsencrypt/live/ebcert/privkey.pem;
              ssl_session_timeout  5m;
              ssl_protocols  TLSv1.1 TLSv1.2;
              ssl_ciphers "EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH";
              ssl_prefer_server_ciphers   on;
              if ($ssl_protocol = "") {
                rewrite ^ https://$host$request_uri? permanent;
              }
              location / {
                  proxy_pass  http://127.0.0.1:5000;
                  proxy_http_version 1.1;

                  proxy_set_header    Connection          $connection_upgrade;
                  proxy_set_header    Upgrade             $http_upgrade;
                  proxy_set_header    Host                $host;
                  proxy_set_header    X-Real-IP           $remote_addr;
                  proxy_set_header    X-Forwarded-For     $proxy_add_x_forwarded_for;
                  proxy_pass_request_headers    on;
              }
          }
packages:
  yum:
    epel-release: []

container_commands:
  10_installcertbot:
    command: "wget https://dl.eff.org/certbot-auto;chmod a+x certbot-auto"
  20_getcert:
    command: "sudo ./certbot-auto certonly --debug --non-interactive --email ${certemail} --agree-tos --standalone --domains ${certdomain} --keep-until-expiring --pre-hook \"service nginx stop\""
  30_link:
    command: "ln -sf /etc/letsencrypt/live/${certdomain} /etc/letsencrypt/live/ebcert"
  40_copy:
    command: "mv /tmp/ssl_proxy.conf /etc/nginx/conf.d/ssl_proxy.conf"
